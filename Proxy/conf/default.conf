# log_format compression '$remote_addr - $remote_user [$time_local] '
#         '"$request" $status $upstream_addr '
#         '"$http_referer" "$http_user_agent" "$gzip_ratio"';

# upstream dncapi {
#     server dncapi:80;
# }

# server {
#     listen 80;
#     access_log /var/log/nginx/access.log compression;

#     location /api {
#         set $upstream_endpoint http://dncapi:80;
#         #rewrite ^/api(/.*) $1 break;
#         proxy_pass         $upstream_endpoint;
#         proxy_redirect     off;
#         proxy_set_header   Host $host;
#         proxy_set_header   X-Real-IP $remote_addr;
#         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header   X-Forwarded-Host $server_name;
#     }
# }


upstream fe {
    server client:9000;
}

upstream be {
    server api:5000;
}

server {
    listen 80;

    # set DNS resolver as Docker internal DNS
    resolver 127.0.0.11 valid=10s;
    resolver_timeout 5s; 

    location / {
        # prevent dns caching and force nginx to make a dns lookup on each request.
        set $target1 http://fe;
        proxy_pass $target1;
    }

    location /api {
        # prevent dns caching and force nginx to make a dns lookup on each request.
        set $target1 http://be;
        proxy_pass $target1;
    }
}